# Autogenerated with SMOP version 
# /usr/local/bin/smop mainEulerBeam.m

from __future__ import division
try:
    from runtime import *
except ImportError:
    from smop.runtime import *

def mainEulerBeam_(L=None,diameter=None,Q=None,Vg=None,VgAC=None,Vbias=None,h=None,cRatio=None,dBdz=None,Sz=None,T_0=None,pos=None,TStepCount=None,fStepCount=None,*args,**kwargs):
    varargin = cellarray(args)
    nargin = 14-[L,diameter,Q,Vg,VgAC,Vbias,h,cRatio,dBdz,Sz,T_0,pos,TStepCount,fStepCount].count(None)+len(args)

    fprintf_(char('---Starting eulerBeam Solver---\\nCheck Matlab status bar for progress\\n'))
    LDim=max_(size_(L))
    dDim=max_(size_(diameter))
    QDim=max_(size_(Q))
    VgDim=max_(size_(Vg))
    ACDim=max_(size_(VgAC))
    VbDim=max_(size_(Vbias))
    hDim=max_(size_(h))
    cDim=max_(size_(cRatio))
    dBDim=max_(size_(dBdz))
    SzDim=max_(size_(Sz))
    T0Dim=max_(size_(T_0))
    posDim=max_(size_(pos))
    tmp1=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    tmp2=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    tmp3=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    tmp4=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    tmp5=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    tmp6=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    STRdeltaX0=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    STRVgDeltaX0=zeros_(LDim,dDim,QDim,VgDim,ACDim,VbDim,hDim,cDim,dBDim,SzDim,T0Dim,posDim)
    for Lk in arange_(1,LDim).reshape(-1):
        for dk in arange_(1,dDim).reshape(-1):
            for Qk in arange_(1,QDim).reshape(-1):
                for Vgk in arange_(1,VgDim).reshape(-1):
                    for ACk in arange_(1,ACDim).reshape(-1):
                        for Vbk in arange_(1,VbDim).reshape(-1):
                            for hk in arange_(1,hDim).reshape(-1):
                                for ck in arange_(1,cDim).reshape(-1):
                                    for dBk in arange_(1,dBDim).reshape(-1):
                                        for Szk in arange_(1,SzDim).reshape(-1):
                                            for T0k in arange_(1,T0Dim).reshape(-1):
                                                for posk in arange_(1,posDim).reshape(-1):
                                                    setDesktopStatus_(sprintf_(char('Starting Calculations: L-%d/%d, d-%d/%d, Q-%d/%d, Vg-%d/%d, Vb-%d/%d, h-%d/%d, c-%d/%d, dBdz-%d/%d, Sz-%d/%d, T_0-%d/%d, pos-%d/%d\\n'),Lk,LDim,dk,dDim,Qk,QDim,Vgk,VgDim,Vbk,VbDim,hk,hDim,ck,cDim,dBk,dBDim,Szk,SzDim,T0k,T0Dim,posk,posDim))
                                                    T,tmpXmax,__,__,__,__,K_elec,F_mag=eulerTension_(L[Lk],diameter[dk],Q[Qk],Vg[Vgk],Vbias[Vbk],h[hk],cRatio[ck],dBdz[dBk],0,T_0[T0k],pos[posk],TStepCount,varargin,nargout=8)
                                                    if max_(size_(T)) == TStepCount:
                                                        fprintf_(char('Warning: Hit max step count in omega0 T calc at %d %d %d %d %d %d %d %d %d %d %d %d\\n'),Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk)
                                                        fprintf_(char('Current Setting: L = %e, d = %e, Q = %e, Vg = %e, VgAC = %e, Vb = %e, h = %e, cRatio = %e, dBdz = %e, Sz = 0(forced), T_0 = %e, pos = %e\\n'),L[Lk],diameter[dk],Q[Qk],Vg[Vgk],VgAC[ACk],Vbias[Vbk],h[hk],cRatio[ck],dBdz[dBk],T_0[T0k],pos[posk])
                                                    tmp3[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=T[end()]
                                                    tmp5[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=tmpXmax
                                                    omega=eulerFreq_(L[Lk],diameter[dk],T[end()],K_elec,F_mag,pos[posk],fStepCount)
                                                    if max_(size_(omega)) == fStepCount and max_(abs_(omega[end() - 5:end() - 1] - omega[end()])) > 50:
                                                        fprintf_(char('Warning: Hit max step count in omega0 freq calc and large deviations at %d %d %d %d %d %d %d %d %d %d %d %d\\n'),Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk)
                                                        fprintf_(char('Current Setting: L = %e, d = %e, Q = %e, Vg = %e, VgAC = %e, Vb = %e, h = %e, cRatio = %e, dBdz = %e, Sz = 0(forced), T_0 = %e, pos = %e\\n'),L[Lk],diameter[dk],Q[Qk],Vg[Vgk],VgAC[ACk],Vbias[Vbk],h[hk],cRatio[ck],dBdz[dBk],T_0[T0k],pos[posk])
                                                    tmp1[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=omega[end()]
                                                    T,tmpXmaxF,__,__,__,__,K_elec,F_mag=eulerTension_(L[Lk],diameter[dk],Q[Qk],Vg[Vgk],Vbias[Vbk],h[hk],cRatio[ck],dBdz[dBk],Sz[Szk],T_0[T0k],pos[posk],TStepCount,varargin,nargout=8)
                                                    if max_(size_(T)) == TStepCount:
                                                        fprintf_(char('Warning: Hit max step count in omega0F T calc at %d %d %d %d %d %d %d %d %d %d %d %d\\n'),Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk)
                                                        fprintf_(char('Current Setting: L = %e, d = %e, Q = %e, Vg = %e, VgAC = %e, Vb = %e, h = %e, cRatio = %e, dBdz = %e, Sz = %e, T_0 = %e, pos = %e\\n'),L[Lk],diameter[dk],Q[Qk],Vg[Vgk],VgAC[ACk],Vbias[Vbk],h[hk],cRatio[ck],dBdz[dBk],Sz[Szk],T_0[T0k],pos[posk])
                                                    tmp4[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=T[end()]
                                                    tmp6[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=tmpXmaxF
                                                    omega=eulerFreq_(L[Lk],diameter[dk],T[end()],K_elec,F_mag,pos[posk],fStepCount)
                                                    if max_(size_(omega)) == fStepCount and max_(abs_(omega[end() - 5:end() - 1] - omega[end()])) > 50:
                                                        fprintf_(char('Warning: Hit max step count in omega0F freq calc and large deviations at %d %d %d %d %d %d %d %d %d %d %d %d\\n'),Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk)
                                                        fprintf_(char('Current Setting: L = %e, d = %e, Q = %e, Vg = %e, VgAC = %e, Vb = %e, h = %e, cRatio = %e, dBdz = %e, Sz = %e, T_0 = %e, pos = %e\\n'),L[Lk],diameter[dk],Q[Qk],Vg[Vgk],VgAC[ACk],Vbias[Vbk],h[hk],cRatio[ck],dBdz[dBk],Sz[Szk],T_0[T0k],pos[posk])
                                                    tmp2[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=omega[end()]
                                                    dCg=2 * pi * epsilon0 * L[Lk] / ((log_(2 * (h[hk] - tmpXmaxF) / (diameter[dk] / 2))) ** 2 * (h[hk] - tmpXmaxF))
                                                    mCNT=rhoA * 0.735 * pi * diameter[dk] * L[Lk]
                                                    STRdeltaX0[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=(Q[Qk] * Vg[Vgk] * VgAC[ACk] * dCg) / (mCNT * omega[end()] ** 2)
                                                    STRVgDeltaX0[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k,posk]=Vg[Vgk] * STRdeltaX0[Lk,dk,Qk,Vgk,ACk,Vbk,hk,ck,dBk,Szk,T0k]
    omega0=squeeze_(tmp1)
    omega0F=squeeze_(tmp2)
    deltaOmega=omega0F - omega0
    tension=squeeze_(tmp3)
    tensionF=squeeze_(tmp4)
    xMax=squeeze_(tmp5)
    xMaxF=squeeze_(tmp6)
    deltaX0=squeeze_(STRdeltaX0)
    VgDeltaX0=squeeze_(STRVgDeltaX0)
    fprintf_(char('Complete on %s\\n'),datestr_(now))
    return omega0,omega0F,deltaOmega,tension,tensionF,xMax,xMaxF,deltaX0,VgDeltaX0
